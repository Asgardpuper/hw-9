{"mappings":"AAmBA,SAASA,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,uBAAqBN,EAAY,QAASC,OAEhDM,EAAK,sBAAoBP,EAAU,QAASC,MAAU,GAEzDA,EAAM,G,EA5BA,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBACN,MAAMb,MAAEA,EAAKc,KAAEA,EAAIC,OAAEA,GAAWH,EAAMI,cAChCC,EAAUC,OAAOlB,EAAMmB,OACvBC,EAASF,OAAOJ,EAAKK,OACrBE,EAAWH,OAAOH,EAAOI,OAC/B,IAAK,IAAIpB,EAAW,EAAGA,EAAWsB,EAAUtB,IAAY,CAEtDD,EAAcC,EADEkB,EAAUG,EAASrB,GAEhCuB,MAAKC,GAAWC,QAAQC,IAAIF,KAC5BG,OAAMC,GAASH,QAAQC,IAAIE,I","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget;\n  const delayVl = Number(delay.value);\n  const stepVl = Number(step.value);\n  const amountVl = Number(amount.value);\n  for (let position = 0; position < amountVl; position++) {\n    let timeDelay = delayVl + stepVl * position;\n    createPromise(position, timeDelay)\n      .then(message => console.log(message))\n      .catch(error => console.log(error));\n  }\n}\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position + 1} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","form","document","querySelector","addEventListener","event","preventDefault","step","amount","currentTarget","delayVl","Number","value","stepVl","amountVl","then","message","console","log","catch","error"],"version":3,"file":"03-promises.0afc9f7f.js.map"}